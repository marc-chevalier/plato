opam-version: "2.0"
name: "plato"
version: "1.1.3"
synopsis: "Python Library Adapted To OCaml"
maintainer: "Marc Chevalier <github@marc-chevalier.com>"
authors: "Marc Chevalier <github@marc-chevalier.com>"
homepage: "https://github.com/marc-chevalier/plato"
dev-repo: "git://github.com/marc-chevalier/plato"
bug-reports: "https://github.com/marc-chevalier/plato/issues"
depends: [
  "ocaml" {>= "4.06.0"}
  "dune" {>= "2.0.0"}
  "re" {>= "1.9.0"}
  "stdcompat" {>= "13"}
  "cppo" {>= "1.6.6"}
  "ounit2" {with-test & >= "2.0.8"}
  "ocolor" {with-test}
]
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
run-test: [
  ["dune" "runtest" "-p" name "-j" jobs]
]
license: "MIT"
description: """
Python Library Adapted To Ocaml

Plato provides some parts of Python standard library I was missing in OCaml.
That means things relevant in OCaml (typically, not GC related), without a
existing great OCaml library (like `re` for `re` or `yojson` for `json`).
"""
